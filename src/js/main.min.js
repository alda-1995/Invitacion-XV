gsap.registerPlugin(ScrollTrigger);

Splitting();

const interval = setInterval(updateCountdown, 1000);
function updateCountdown() {
    const countdownDate = moment.tz('2024-06-29', 'America/Mexico_City');
    const currentDate = moment();
    const duration = moment.duration(countdownDate.diff(currentDate));

    const days = Math.floor(duration.asDays());
    const hours = duration.hours();
    const minutes = duration.minutes();
    const seconds = duration.seconds();

    document.getElementById('days').textContent = days;
    document.getElementById('hours').textContent = hours;
    document.getElementById('minutes').textContent = minutes;
    document.getElementById('seconds').textContent = seconds;

    if (duration.asSeconds() <= 0) {
        clearInterval(interval);
        document.getElementById('days').textContent = '0';
        document.getElementById('hours').textContent = '0';
        document.getElementById('minutes').textContent = '0';
        document.getElementById('seconds').textContent = '0';
    }
}

// Update the countdown initially and then every 1000ms (1 second)
updateCountdown();

var gallerySwiperNav = new Swiper(".gallerySwiperNav", {
    spaceBetween: 10,
    slidesPerView: 3,
    loop: true,
    freeMode: true,
});

var swiperGallery = new Swiper(".gallerySwiper", {
    spaceBetween: 10,
    loop: true,
    autoplay: {
        delay: 2500,
        disableOnInteraction: false,
    },
    thumbs: {
        swiper: gallerySwiperNav,
      },
});

swiperGallery.controller.control = gallerySwiperNav;

var swiperBanner = new Swiper(".swiperBanner", {
    slidesPerView: 1,
    spaceBetween: 10,
    loop: true,
    effect: "fade",
    autoplay: {
        delay: 2500,
        disableOnInteraction: false,
    },
});

const AudioPlayer = () => {
    const audioRef = document.getElementById("audioMusic");
    const btnPlay = document.getElementById('btnPlay');
    const btnPlayLoader = document.getElementById('startBtn');
    const iconPlay = document.getElementById('icon-play');
    const iconPause = document.getElementById('icon-pause');
    const progressBar = document.getElementById('bar-progress');
    let currentTime = 0;
    let duration = 0;

    btnPlay.addEventListener("click", function (e) {
        togglePlay();
    });

    btnPlayLoader.addEventListener("click", function (e) {
        togglePlay();
        hideLoader();
    });

    const togglePlay = () => {
        if (audioRef.paused) {
            audioRef.play();
            iconPlay.classList.add("hidden");
            iconPause.classList.remove("hidden");
        } else {
            audioRef.pause();
            iconPlay.classList.remove("hidden");
            iconPause.classList.add("hidden");
        }
    };

    const handleTimeUpdate = () => {
        currentTime = audioRef.currentTime;
        duration = audioRef.duration;
        // const progressValue = (currentTime / duration) * 100;
        // progressBar.value = progressValue;
        // progressBar.max = 100;
    };

    if (audioRef) {
        audioRef.addEventListener("timeupdate", handleTimeUpdate);
    }
};
const audioPlayer = AudioPlayer();
const animationTextUpScroll = [...document.querySelectorAll('[data-splitting][data-effect-up]')];
const animationTextUpInit = [...document.querySelectorAll('[data-splitting][data-effect-up-init]')];
const animationTextOpacityInit = [...document.querySelectorAll('[data-effect-opacity-init]')];
const animationTextOpacityScroll = [...document.querySelectorAll('[data-effect-opacity]')];

const LoaderBefore = () => {
    animationTextUpInit.forEach(title => {
        const delay = title.getAttribute("data-delay");
        const words = title.querySelectorAll('.word');
        const chars = [...words].map(word => word.querySelectorAll('.char'));
        const tl = gsap.timeline();
        const wordTimeline = gsap.timeline()
            .fromTo(chars, {
                opacity: 0,
                scale: 0,
            }, {
                willChange: 'transform, opacity',
                opacity: 1,
                scale: 1,
                ease: 'power1.in',
                stagger: {
                    each: 0.03,
                    from: 'edges'
                },
                duration: 1,
                delay: (delay) ? delay : 0
            });
        tl.add(wordTimeline, Math.random() * .5);
    });

    animationTextOpacityInit.forEach(title => {
        const delay = title.getAttribute("data-delay");
        gsap.to(title, { duration: 1, opacity: 1, ease: 'power1.inOut', delay: (delay) ? delay : 0 });
    });
};

const scrollAnimaciones = () => {
    animationTextUpScroll.forEach(title => {
        const delay = title.getAttribute("data-delay");
        const words = title.querySelectorAll('.word');
        const chars = [...words].map(word => word.querySelectorAll('.char'));
        gsap.fromTo(chars, {
            opacity: 0,
            scale: 0,
        }, {
            willChange: 'transform, opacity',
            opacity: 1,
            scale: 1,
            ease: 'power1.in',
            stagger: {
                each: 0.03,
                from: 'edges'
            },
            duration: 1,
            delay: (delay) ? delay : 0,
            scrollTrigger: {
                trigger: title,
                start: 'top 70%',
                end: 'top 70%',
                markers: false
            }
        });
    });

    animationTextOpacityScroll.forEach(title => {
        const delayValue = title.getAttribute("data-delay");
        gsap.fromTo(title,
            { opacity: 0 },
            {
                opacity: 1,
                delay: delayValue ? delayValue : 0,
                duration: 1,
                ease: 'power1.inOut',
                scrollTrigger: {
                    trigger: title,
                    start: 'top 70%',
                    end: 'top 70%',
                    markers: false,
                },
            });
    });
};

const heartsAnimation = () => {
    const images = document.querySelectorAll(".img-heart");
    images.forEach((image) => {
        animateMe(image);
    });
};

function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
}

function animateMe(box) {
    gsap.to(box, 
    { 
        opacity: 1, delay: randomNumber(1, 6), 
        repeatDelay: 1, 
        repeat: 1,
        duration: 0.8,
        yoyoEase: true,
        onComplete: animateMe, 
        onCompleteParams: [box] 
    });
}

function hideLoader() {
    var tl = gsap.timeline();
    tl.to("#loader", { opacity: 0, duration: 0.5 });
    tl.set("body", { overflowY: "auto" });
    tl.set("#loader", { zIndex: -1 });
    tl.to("#woman-banner", { duration: 0.8, scale: 1, opacity: 0.10, ease: "expoScale(0.5, 3, power2.inOut)" });
    tl.set("#parent", { opacity: 1 });
    tl.add(function(){
        LoaderBefore();
    });
}

window.onload = function () {
    heartsAnimation();
    scrollAnimaciones();    
    const tlLoader = gsap.timeline();
    tlLoader.to("#blockAnimationLoader", { duration: 0.5, y: "100%", delay: 0.5, opacity: 0 });
    tlLoader.set("#btnLoader", { zIndex: 4 });
    tlLoader.to("#btnLoader", { opacity: 1, duration: 0.5 });
}